#!/usr/bin/make -f

DEB_HOST_MULTIARCH ?= $(shell dpkg-architecture -qDEB_HOST_MULTIARCH)
export JAVA_HOME=/usr/lib/jvm/default-java
export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF-8
export CCACHE_DIR=$(CURDIR)/ccache

%:
	dh $@ --buildsystem=maven --with javahelper

override_dh_install:
	dh_install
	mh_installjar -plibjffi-java pom.xml target/jffi-1.2.7.jar

	# install -jni library in multi-arch path
	mkdir -p debian/libjffi-jni/usr/lib/$(DEB_HOST_MULTIARCH)/jni
	mkdir jni-temp \
		&& cd jni-temp \
		&& jar xvf ../dist/jffi-*-Linux.jar \
		&& find jni/ -type f -name "*.so" -exec mv -v {} ../debian/libjffi-jni/usr/lib/$(DEB_HOST_MULTIARCH)/jni \;
	rm -rfv jni-temp
	-cd debian/libjffi-jni/usr && rm -rf share/maven-repo share/java

override_dh_auto_build:
	mkdir -p archive
	ant -Duse.system.libffi=1 jar test
	dh_auto_build

override_dh_auto_build-arch:
	mkdir -p archive
	ant -Duse.system.libffi=1 build-native

JAR=debian/libjffi-java/usr/share/java/jffi.jar
override_jh_manifest-indep:
	jh_manifest -plibjffi-java
	# generate OSGi metadata
	-test -f $(JAR) && \
	bnd wrap --properties debian/jffi.bnd --output $(JAR).tmp $(JAR)
	mv $(JAR).tmp $(JAR)

override_dh_clean:
	ant clean
	dh_clean

#
# original jffi package
#
##!/usr/bin/make -f
#
#include /usr/share/cdbs/1/rules/debhelper.mk
#include /usr/share/cdbs/1/class/ant.mk
#
#JAVA_HOME            := /usr/lib/jvm/default-java
#DEB_ANT_BUILD_TARGET := -Duse.system.libffi=1 jar test
#DEB_JARS             := ant-nodeps ant-junit junit4
#
#common-post-build-indep::
#	# Generate OSGi metadata for jffi.jar
#	bnd wrap -properties debian/jffi.bnd -output dist/jffi.jar dist/jffi.jar
#
#install/libjffi-java::
#	mh_installpom -plibjffi-java pom.xml
#	$(JAVA_HOME)/bin/jar umf debian/manifest dist/jffi.jar
#	mh_installjar -plibjffi-java pom.xml -l dist/jffi.jar
#
#install/libjffi-jni::
#	install -D -m644 dist/jffi-*-*.jar \
#		debian/libjffi-jni/usr/lib/jffi/jffi-native.jar
#	cp ./build/jni/libjffi-1.0.so debian/libjffi-jni/usr/lib/
#
#binary-predeb/libjffi-jni::
#	rm -f debian/libjffi-jni/usr/lib/libjffi-1.0.so
#
